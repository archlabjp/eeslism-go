//This file is part of EESLISM.
//
//Foobar is free software : you can redistribute itand /or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//Foobar is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with Foobar.If not, see < https://www.gnu.org/licenses/>.

/*

            ÂΩ¢ÊÖã‰øÇÊï∞„ÇíÊ±Ç„ÇÅ„Çã
                       FILE=MONTE_CARLO.c
                       Create Date=1999.6.7
   061110 FFACTOR_LP$B$r=$@5(B  $B;M3Q7A$7$+G'<1$7$F$$$J$+$C$?(B

*/

package eeslism

import (
	"fmt"
	"math"
)

/*
MONTE_CARLO (Monte Carlo Simulation for Shading and Form Factors)

„Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅ„É¢„É≥„ÉÜ„Ç´„É´„É≠Ê≥ï„ÇíÁî®„ÅÑ„Å¶„ÄÅ
Âª∫Áâ©„ÅÆÂêÑ‰∏ªÈù¢Ôºà`MP`Ôºâ„Åã„ÇâË¶ã„ÅüÂë®Âõ≤„ÅÆÈöúÂÆ≥Áâ©Ôºà`LP`Ôºâ„Å´„Çà„ÇãÊó•ÂΩ±„ÅÆÂΩ±Èüø„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
„Åæ„Åü„ÄÅÂú∞Èù¢„Åã„Çâ„ÅÆÂèçÂ∞ÑÊó•Â∞Ñ„ÇÑ„ÄÅÂ§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞„ÇÇË©ï‰æ°„Åó„Åæ„Åô„ÄÇ

Âª∫ÁØâÁí∞Â¢ÉÂ∑•Â≠¶ÁöÑ„Å™Ë¶≥ÁÇπ:
- **„É¢„É≥„ÉÜ„Ç´„É´„É≠Ê≥ï„Å´„Çà„ÇãÊó•ÂΩ±Ë®àÁÆó**: Ë§áÈõë„Å™ÂΩ¢Áä∂„ÅÆÂª∫Áâ©„ÇÑÂë®Âõ≤„ÅÆÈöúÂÆ≥Áâ©„Å´„Çà„ÇãÊó•ÂΩ±„ÇíÊ≠£Á¢∫„Å´Ë®àÁÆó„Åô„Çã„Åü„ÇÅ„Å´„ÄÅ
  „É¢„É≥„ÉÜ„Ç´„É´„É≠Ê≥ï„ÅåÁî®„ÅÑ„Çâ„Çå„Åæ„Åô„ÄÇ
  „Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÂ§öÊï∞„ÅÆ„É©„É≥„ÉÄ„É†„Å™Â§™ÈôΩÂÖâÁ∑öÔºà`NUM`Ôºâ„ÇíÁîüÊàê„Åó„ÄÅ
  „Åù„Çå„Çâ„ÅåÈöúÂÆ≥Áâ©„Å´„Çà„Å£„Å¶ÈÅÆ„Çâ„Çå„Çã„Åã„Å©„ÅÜ„Åã„ÇíÁµ±Ë®àÁöÑ„Å´Âá¶ÁêÜ„Åô„Çã„Åì„Å®„Åß„ÄÅ
  ÂêÑ‰∏ªÈù¢„Å∏„ÅÆÊó•Â∞ÑÂÖ•Â∞ÑÈáè„ÇíÊé®ÂÆö„Åó„Åæ„Åô„ÄÇ
- **ÂÖâÁ∑öËøΩË∑°„Å®‰∫§Â∑ÆÂà§ÂÆö**: 
  - `ZAHYOU`: ÂêÑ‰∏ªÈù¢„ÇíÂü∫Ê∫ñ„Å®„Åó„ÅüÂ∫ßÊ®ôÁ≥ª„Å´Â§âÊèõ„Åó„Åæ„Åô„ÄÇ
  - `HOUSEN`: ÂêÑÈù¢„ÅÆÊ≥ïÁ∑ö„Éô„ÇØ„Éà„É´„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
  - `KOUTEN`: ÂÖâÁ∑ö„Å®ÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆ‰∫§ÁÇπ„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
  - `INOROUT`: ‰∫§ÁÇπ„ÅåÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆÂ§öËßíÂΩ¢„ÅÆÂÜÖÈÉ®„Å´„ÅÇ„Çã„Åã„Å©„ÅÜ„Åã„ÇíÂà§Êñ≠„Åó„Åæ„Åô„ÄÇ
  „Åì„Çå„Çâ„ÅÆÂπæ‰ΩïÂ≠¶ÁöÑË®àÁÆó„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Çã„Åì„Å®„Åß„ÄÅ
  Â§™ÈôΩÂÖâÁ∑ö„ÅåÈöúÂÆ≥Áâ©„Å´„Çà„Å£„Å¶ÈÅÆ„Çâ„Çå„Çã„Åã„Å©„ÅÜ„Åã„ÇíÊ≠£Á¢∫„Å´Âà§ÂÆö„Åó„Åæ„Åô„ÄÇ
- **ÂΩ±Èù¢Á©ç„ÅÆË®àÁÆó**: ÂÖâÁ∑ö„ÅåÈöúÂÆ≥Áâ©„Å´ÂΩì„Åü„Å£„ÅüÂ†¥Âêà„ÄÅ
  „Åù„ÅÆÂÖâÁ∑ö„ÅåÈÅÆ„Çâ„Çå„Åü„Å®Âà§Êñ≠„Åó„ÄÅ
  ÂΩ±Èù¢Á©çÔºà`sumwall`Ôºâ„Å´ÂØÑ‰∏é„Åï„Åõ„Åæ„Åô„ÄÇ
  `mlp[mencnt[i]].shad[nday]`„ÅØ„ÄÅ
  ÂêÑÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆÊó•ÂΩ±ÁéáÔºàÈÄèÈÅéÁéáÔºâ„ÇíÁ§∫„Åó„ÄÅ
  ÂΩ±„ÅÆÊøÉÊ∑°„ÇíËÄÉÊÖÆ„Åó„Åæ„Åô„ÄÇ
- **Âú∞Èù¢„Åã„Çâ„ÅÆÂèçÂ∞ÑÊó•Â∞Ñ (faig)**:
  Âú∞Èù¢„Åã„Çâ„ÅÆÂèçÂ∞ÑÊó•Â∞Ñ„ÅØ„ÄÅÊó•Â∞ÑÁÜ±ÂèñÂæóÈáè„ÇíÂ¢óÂä†„Åï„Åõ„ÇãË¶ÅÂõ†„Å®„Å™„Çä„Åæ„Åô„ÄÇ
  „Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÂú∞Èù¢„Å´Âà∞ÈÅî„Åô„ÇãÂÖâÁ∑ö„ÅÆÂâ≤ÂêàÔºà`sumg`Ôºâ„ÇíË®àÁÆó„Åó„ÄÅ
  Âú∞Èù¢„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞Ôºà`MP[j].faig`Ôºâ„ÇíÁÆóÂá∫„Åó„Åæ„Åô„ÄÇ
- **Â§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞ (faia)**:
  Â§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞„ÅØ„ÄÅ
  ÂêÑÈù¢„ÅåÂ§©Á©∫„Åã„ÇâÂèó„Åë„ÇãÊîæÂ∞ÑÁÜ±‰ºùÈÅî„ÅÆÂâ≤Âêà„ÇíÁ§∫„Åó„Åæ„Åô„ÄÇ
  „Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÂ§©Á©∫„Å´Âà∞ÈÅî„Åô„ÇãÂÖâÁ∑ö„ÅÆÂâ≤ÂêàÔºà`suma`Ôºâ„ÇíË®àÁÆó„Åó„ÄÅ
  Â§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞Ôºà`MP[j].faia`Ôºâ„ÇíÁÆóÂá∫„Åó„Åæ„Åô„ÄÇ

„Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÂª∫Áâ©„ÅÆÊó•Â∞ÑÁí∞Â¢É„ÇíÊ≠£Á¢∫„Å´„É¢„Éá„É´Âåñ„Åó„ÄÅ
Êó•Â∞ÑÁÜ±ÂèñÂæó„ÅÆÊäëÂà∂„ÄÅÂÜ∑ÊàøË≤†Ëç∑„ÅÆËªΩÊ∏õ„ÄÅ
ÊòºÂÖâÂà©Áî®„ÅÆÊúÄÈÅ©Âåñ„ÄÅ„Åä„Çà„Å≥Êó•ÂΩ±Ë®àÁÆó„ÇíË°å„ÅÜ„Åü„ÇÅ„ÅÆÈáçË¶Å„Å™ÂΩπÂâ≤„ÇíÊûú„Åü„Åó„Åæ„Åô„ÄÇ
*/
func MONTE_CARLO(
	mpn int,
	lpn int,
	NUM int,
	MP []*P_MENN,
	LP []*P_MENN,
	GP [][]XYZ,
	gpn int,
	nday int,
	startday int,
) {

	var j, h, l, n, i, k, mlpn int
	var suma, sumg float64
	var sumwall []float64
	var G, O, OO, E XYZ
	var mlp []*P_MENN
	var a, va, FF float64
	var gcnt int /*--Âú∞Èù¢„ÅÆ‰ª£Ë°®ÁÇπ„Ç´„Ç¶„É≥„Çø„Éº--*/

	O.X = 0.0
	O.Y = 0.0
	O.Z = 0.0

	/*--------„É°„É¢„É™„Éº„ÅÆÁ¢∫‰øù-----------------*/
	mlpn = mpn + lpn
	sumwall = make([]float64, mlpn)
	mlp = make([]*P_MENN, mlpn)

	suma = 0
	sumg = 0
	gcnt = 0
	for i = 0; i < mlpn; i++ {
		sumwall[i] = 0.0
	}

	for j = 0; j < mpn; j++ {
		/*-----opÈù¢„ÅÆ‰∏≠ÂøÉÁÇπ„ÅÆÂ∫ßÊ®ô„ÇíÊ±Ç„ÇÅ„Çã--------*/
		G = GDATA(MP[j])
		//printf("MP[%d].opname=%s wlflg=%d\n",j,MP[j].opname,MP[j].wlflg) ;
		/*-----------ÂàùÊúüÂåñ---------------*/
		for i = 0; i < mlpn; i++ {
			mlp[i] = new(P_MENN)
			mlp[i].e.X = 0.0
			mlp[i].e.Y = 0.0
			mlp[i].e.Z = 0.0
		}
		//MATINIT(mlp,mlpn) ;

		/*---------mlpÈù¢„ÅÆÂ∫ßÊ®ôÂ§âÊèõ---------*/
		for h = 0; h < mlpn; h++ {

			if h < mpn {

				mlp[h].sbflg = MP[h].sbflg /*--higuchi add 080915 */

				mlp[h].polyd = MP[h].polyd
				mlp[h].P = make([]XYZ, mlp[h].polyd)
				for i = 0; i < mlp[h].polyd; i++ {
					mlp[h].P[i].X = 0.0
					mlp[h].P[i].Y = 0.0
					mlp[h].P[i].Z = 0.0
				}

				for k = 1; k < 366; k++ {
					mlp[h].shad[k] = 1.0
				}

				for l = 0; l < mlp[h].polyd; l++ {
					ZAHYOU(MP[h].P[l], G, &mlp[h].P[l], MP[j].wa, MP[j].wb)
				}
			} else {
				mlp[h].polyd = LP[h-mpn].polyd

				mlp[h].sbflg = LP[h-mpn].sbflg /*--higuchi add  0809015  --*/

				mlp[h].P = make([]XYZ, mlp[h].polyd)

				for i = 0; i < mlp[h].polyd; i++ {
					mlp[h].P[i].X = 0.0
					mlp[h].P[i].Y = 0.0
					mlp[h].P[i].Z = 0.0
				}

				for k = 1; k < 366; k++ {
					mlp[h].shad[k] = LP[h-mpn].shad[k]
				}

				for l = 0; l < mlp[h].polyd; l++ {
					ZAHYOU(LP[h-mpn].P[l], G, &mlp[h].P[l], MP[j].wa, MP[j].wb)
				}
			}
		}

		const M_rad = math.Pi / 180.0

		ZAHYOU(O, G, &OO, MP[j].wa, MP[j].wb)

		// E„ÅØMPÈù¢„ÅÆÂ§™ÈôΩÂÇæÊñú„Éô„ÇØ„Éà„É´??
		E.X = 0.0
		E.Y = -math.Sin((-MP[j].wb) * M_rad)
		E.Z = math.Cos((-MP[j].wb) * M_rad)

		/*-------opÈù¢„ÅÆÊ≥ïÁ∑ö„Éô„ÇØ„Éà„É´„ÇíÊ±Ç„ÇÅ„Çã----------*/
		HOUSEN(mlp)

		/*-------------ÁÇπ„ÇíÂ∞ÑÂá∫„Åô„Çã-------------------*/
		for n = 0; n < NUM; n++ {
			var ls, ms, ns, s float64

			/*----------‰π±Êï∞„ÅÆÁô∫Áîü--------------*/
			RAND(&a, &va)

			// ls: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãXËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÊù±Ë•øÊñπÂêëÔºâ
			// ms: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãYËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÂçóÂåóÊñπÂêëÔºâ
			// ns: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãZËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÂûÇÁõ¥ÊñπÂêëÔºâ
			ls = math.Sin(va) * math.Cos(a)
			ms = math.Sin(va) * math.Sin(a)
			ns = math.Cos(va)

			s = URA_M(ls, ms, ns, MP[j].wb)
			KAUNT(mlpn, ls, ms, ns, &suma, &sumg, sumwall, s,
				mlp, GP[j], OO, E, MP[j].wa, MP[j].wb, G, gpn,
				nday, &gcnt, startday, MP[j].wlflg)
		}

		if nday == startday {
			if gcnt >= gpn {
				GP[j][gpn].X = -999
				GP[j][gpn].Y = -999
				GP[j][gpn].Z = -999
			} else {
				GP[j][gcnt].X = -999
				GP[j][gcnt].Y = -999
				GP[j][gcnt].Z = -999
			}
		}

		FF = 0.0
		for i = 0; i < mlpn; i++ {
			MP[j].faiwall[i] = sumwall[i] / float64(NUM)
			FF = FF + MP[j].faiwall[i]
		}
		MP[j].faig = sumg / float64(NUM)
		MP[j].faia = suma / float64(NUM)

		/*--*/
		fmt.Printf("%s faia=%f faig=%f faib=%f\n", MP[j].opname, MP[j].faia, MP[j].faig, FF)
		/*--*/

		FF = FF + MP[j].faia + MP[j].faig

		for i = 0; i < mlpn; i++ {
			sumwall[i] = 0
		}

		suma = 0
		sumg = 0
		gcnt = 0
	}
}

/*
GR_MONTE_CARLO (Ground-Referenced Monte Carlo Simulation for Form Factors)

„Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅ„É¢„É≥„ÉÜ„Ç´„É´„É≠Ê≥ï„ÇíÁî®„ÅÑ„Å¶„ÄÅ
Âú∞Èù¢„Åã„ÇâË¶ã„ÅüÂ§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞Ôºà`grpfaia`Ôºâ„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
„Åì„Çå„ÅØ„ÄÅÂú∞Èù¢„Åã„Çâ„ÅÆÊîæÂ∞ÑÁÜ±‰∫§Êèõ„ÇÑ„ÄÅÂú∞Èù¢„Åã„Çâ„ÅÆÂèçÂ∞ÑÊó•Â∞Ñ„ÇíËÄÉÊÖÆ„Åô„ÇãÈöõ„Å´Áî®„ÅÑ„Çâ„Çå„Åæ„Åô„ÄÇ

Âª∫ÁØâÁí∞Â¢ÉÂ∑•Â≠¶ÁöÑ„Å™Ë¶≥ÁÇπ:
- **Âú∞Èù¢„Åã„Çâ„ÅÆÊîæÂ∞ÑÁÜ±‰∫§Êèõ**: Âú∞Èù¢„ÅØ„ÄÅ
  Â§©Á©∫„ÇÑÂë®Âõ≤„ÅÆÂª∫Áâ©„Å®ÊîæÂ∞ÑÁÜ±„Çí‰∫§Êèõ„Åó„Åæ„Åô„ÄÇ
  „Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÂú∞Èù¢„Åã„Çâ„É©„É≥„ÉÄ„É†„Å™ÊñπÂêë„Å´ÂÖâÁ∑ö„ÇíÂ∞ÑÂá∫„Åó„ÄÅ
  „Åù„Çå„ÅåÂ§©Á©∫„Å´Âà∞ÈÅî„Åô„Çã„Åã„ÄÅ
  „ÅÇ„Çã„ÅÑ„ÅØÈöúÂÆ≥Áâ©„Å´„Çà„Å£„Å¶ÈÅÆ„Çâ„Çå„Çã„Åã„ÇíÁµ±Ë®àÁöÑ„Å´Âá¶ÁêÜ„Åô„Çã„Åì„Å®„Åß„ÄÅ
  Âú∞Èù¢„Åã„ÇâË¶ã„ÅüÂ§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞„ÇíÊé®ÂÆö„Åó„Åæ„Åô„ÄÇ
- **ÂÖâÁ∑öËøΩË∑°„Å®‰∫§Â∑ÆÂà§ÂÆö**: 
  - `KOUTEN`: ÂÖâÁ∑ö„Å®ÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆ‰∫§ÁÇπ„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
  - `INOROUT`: ‰∫§ÁÇπ„ÅåÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆÂ§öËßíÂΩ¢„ÅÆÂÜÖÈÉ®„Å´„ÅÇ„Çã„Åã„Å©„ÅÜ„Åã„ÇíÂà§Êñ≠„Åó„Åæ„Åô„ÄÇ
  „Åì„Çå„Çâ„ÅÆÂπæ‰ΩïÂ≠¶ÁöÑË®àÁÆó„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Çã„Åì„Å®„Åß„ÄÅ
  ÂÖâÁ∑ö„ÅåÈöúÂÆ≥Áâ©„Å´„Çà„Å£„Å¶ÈÅÆ„Çâ„Çå„Çã„Åã„Å©„ÅÜ„Åã„ÇíÊ≠£Á¢∫„Å´Âà§ÂÆö„Åó„Åæ„Åô„ÄÇ
- **ÂΩ±„ÅÆÈÄèÈÅéÁéá„ÅÆËÄÉÊÖÆ**: `mlp[l].shad[day]`„ÅØ„ÄÅ
  ÂêÑÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆÊó•ÂΩ±ÁéáÔºàÈÄèÈÅéÁéáÔºâ„ÇíÁ§∫„Åó„ÄÅ
  ÂΩ±„ÅÆÊøÉÊ∑°„ÇíËÄÉÊÖÆ„Åó„Åæ„Åô„ÄÇ
  „Åì„Çå„Å´„Çà„Çä„ÄÅ„Çà„ÇäÁèæÂÆüÁöÑ„Å™ÂΩ¢ÊÖã‰øÇÊï∞„ÇíÁÆóÂá∫„Åß„Åç„Åæ„Åô„ÄÇ

„Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÂª∫Áâ©„ÅÆÊó•Â∞ÑÁí∞Â¢É„ÇÑÂú∞Áõ§„Åã„Çâ„ÅÆÁÜ±‰ºùÈÅî„ÇíÊ≠£Á¢∫„Å´„É¢„Éá„É´Âåñ„Åó„ÄÅ
ÁÜ±Ë≤†Ëç∑Ë®àÁÆó„ÄÅ„Ç®„Éç„É´„ÇÆ„ÉºÊ∂àË≤ªÈáè‰∫àÊ∏¨„ÄÅ
„Åä„Çà„Å≥ÁúÅ„Ç®„Éç„É´„ÇÆ„ÉºÂØæÁ≠ñ„ÅÆÊ§úË®é„ÇíË°å„ÅÜ„Åü„ÇÅ„ÅÆÈáçË¶Å„Å™ÂΩπÂâ≤„ÇíÊûú„Åü„Åó„Åæ„Åô„ÄÇ
*/
func GR_MONTE_CARLO(mp []*P_MENN, mpn int, lp []*P_MENN, lpn int, monten int, day int) {
	var rp int
	var i, n, l, mlpn, k, h int
	var ls, ms, ns float64
	var a, va float64
	var Px, Py, Pz, U, PX, PY, PZ float64
	var S, T float64
	var shad, sum float64
	var mlp []*P_MENN

	shad = 0.0
	sum = 0.0
	mlpn = mpn + lpn
	mlp = make([]*P_MENN, mlpn)

	/*---MP„Å®LP„ÅÆÁµêÂêà--*/
	for i = 0; i < mlpn; i++ {
		if i < mpn {
			mlp[i] = mp[i]
			for k = 1; k < 366; k++ {
				mlp[i].shad[k] = 1.0
			}
		} else {
			mlp[i] = lp[i-mpn]
			for k = 1; k < 366; k++ {
				mlp[i].shad[k] = lp[i-mpn].shad[k] //LP„ÅÆÈÅÆËîΩÁéá„Çí‰ª£ÂÖ•
			}
		}
	}

	for i = 0; i < mpn; i++ {
		for n = 0; n < monten; n++ {
			// „É©„É≥„ÉÄ„É†„Å™Â§™ÈôΩ‰ΩçÁΩÆ
			// a: Â§™ÈôΩÊñπ‰ΩçËßí
			// va: Â§™ÈôΩÈ´òÂ∫¶
			RAND(&a, &va)

			// ls: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãXËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÊù±Ë•øÊñπÂêëÔºâ
			// ms: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãYËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÂçóÂåóÊñπÂêëÔºâ
			// ns: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãZËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÂûÇÁõ¥ÊñπÂêëÔºâ
			ls = math.Sin(va) * math.Cos(a)
			ms = math.Sin(va) * math.Sin(a)
			ns = math.Cos(va)

			for l = 0; l < mlpn; l++ {
				// ÂâçÈù¢Âú∞Èù¢‰ª£Ë°®ÁÇπ„Åã„ÇâÂ§™ÈôΩÊñπÂêë„ÅÆ„Éô„ÇØ„Éà„É´„Å®XX„ÅÆ‰∫§ÁÇπ (Px,Py,Pz)„ÇíÊ±Ç„ÇÅ„Çã
				KOUTEN(
					mp[i].grp.X, mp[i].grp.Y, mp[i].grp.Z,
					ls, ms, ns,
					&Px, &Py, &Pz,
					mlp[l].P[0], mlp[l].e)

				// ‰∫§ÁÇπ(Px,Py,Pz)„ÅÆÁßªÂãï„Åó„Å¶„Éô„ÇØ„Éà„É´(PX,PY,PZ)„ÇíÊ±Ç„ÇÅ„Çã
				PX = Px - mp[i].grp.X
				PY = Py - mp[i].grp.Y
				PZ = Pz - mp[i].grp.Z

				// „Éô„ÇØ„Éà„É´(PX,PY,PZ)„ÅÆ
				PRA(&U, ls, ms, ns, PX, PY, PZ)

				rp = mlp[l].polyd - 2
				/*--Â§öËßíÂΩ¢„É´„Éº„Éó„ÄÄ‰∏âËßíÂΩ¢ÔºöÔºëÂõû„ÄÅÂõõËßíÂΩ¢ÔºöÔºíÂõû„ÄÅ„ÄÅ„ÄÅ---*/
				for h = 0; h < rp; h++ {
					INOROUT(Px, Py, Pz, mlp[l].P[0], mlp[l].P[h+1], mlp[l].P[h+2], &S, &T)

					if ((S >= 0.0 && T >= 0.0) && ((S + T) <= 1.0)) && (U > 0.0) {
						if mlp[l].shad[day] > 0.0 {
							if shad == 0.0 {
								shad = 1 - mlp[l].shad[day]
							} else {
								shad = shad * (1 - mlp[l].shad[day])
								break
							}
						}
					}
				}

			}
			sum = sum + shad
		}
		mp[i].grpfaia = sum / float64(monten)
		sum = 0
	}
}

/*---------ÈöúÂÆ≥Áâ©LP„Åã„ÇâË¶ã„ÅüÂ§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞-----------*/
/*
FFACTOR_LP (Form Factor Calculation for Light-Receiving Planes)

„Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅ„É¢„É≥„ÉÜ„Ç´„É´„É≠Ê≥ï„ÇíÁî®„ÅÑ„Å¶„ÄÅ
ÈöúÂÆ≥Áâ©Ôºà`LP`Ôºâ„Åã„ÇâË¶ã„ÅüÂ§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞Ôºà`faia`Ôºâ„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
„Åì„Çå„ÅØ„ÄÅÈöúÂÆ≥Áâ©Ë°®Èù¢„Åã„Çâ„ÅÆÊîæÂ∞ÑÁÜ±‰∫§Êèõ„ÇÑ„ÄÅ
ÈöúÂÆ≥Áâ©„Å´„Çà„ÇãÊó•ÂΩ±„ÅÆÂΩ±Èüø„ÇíËÄÉÊÖÆ„Åô„ÇãÈöõ„Å´Áî®„ÅÑ„Çâ„Çå„Åæ„Åô„ÄÇ

Âª∫ÁØâÁí∞Â¢ÉÂ∑•Â≠¶ÁöÑ„Å™Ë¶≥ÁÇπ:
- **ÂΩ¢ÊÖã‰øÇÊï∞„ÅÆÈáçË¶ÅÊÄß**: ÂΩ¢ÊÖã‰øÇÊï∞„ÅØ„ÄÅ
  „ÅÇ„ÇãÈù¢„Åã„ÇâÂà•„ÅÆÈù¢„Å∏ÊîæÂ∞Ñ„Åï„Çå„ÇãÁÜ±„ÅÆÂâ≤Âêà„ÇíÁ§∫„ÅôÁÑ°Ê¨°ÂÖÉÊï∞„Åß„Åô„ÄÇ
  „Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÈöúÂÆ≥Áâ©Ë°®Èù¢„Åã„Çâ„É©„É≥„ÉÄ„É†„Å™ÊñπÂêë„Å´ÂÖâÁ∑ö„ÇíÂ∞ÑÂá∫„Åó„ÄÅ
  „Åù„Çå„ÅåÂ§©Á©∫„Å´Âà∞ÈÅî„Åô„Çã„Åã„ÄÅ
  „ÅÇ„Çã„ÅÑ„ÅØ‰ªñ„ÅÆÈöúÂÆ≥Áâ©„Å´„Çà„Å£„Å¶ÈÅÆ„Çâ„Çå„Çã„Åã„ÇíÁµ±Ë®àÁöÑ„Å´Âá¶ÁêÜ„Åô„Çã„Åì„Å®„Åß„ÄÅ
  ÈöúÂÆ≥Áâ©„Åã„ÇâË¶ã„ÅüÂ§©Á©∫„Å´ÂØæ„Åô„ÇãÂΩ¢ÊÖã‰øÇÊï∞„ÇíÊé®ÂÆö„Åó„Åæ„Åô„ÄÇ
- **ÂÖâÁ∑öËøΩË∑°„Å®‰∫§Â∑ÆÂà§ÂÆö**: 
  - `ZAHYOU`: ÂêÑÈù¢„ÇíÂü∫Ê∫ñ„Å®„Åó„ÅüÂ∫ßÊ®ôÁ≥ª„Å´Â§âÊèõ„Åó„Åæ„Åô„ÄÇ
  - `HOUSEN`: ÂêÑÈù¢„ÅÆÊ≥ïÁ∑ö„Éô„ÇØ„Éà„É´„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
  - `KOUTEN`: ÂÖâÁ∑ö„Å®ÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆ‰∫§ÁÇπ„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ
  - `INOROUT`: ‰∫§ÁÇπ„ÅåÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆÂ§öËßíÂΩ¢„ÅÆÂÜÖÈÉ®„Å´„ÅÇ„Çã„Åã„Å©„ÅÜ„Åã„ÇíÂà§Êñ≠„Åó„Åæ„Åô„ÄÇ
  „Åì„Çå„Çâ„ÅÆÂπæ‰ΩïÂ≠¶ÁöÑË®àÁÆó„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Çã„Åì„Å®„Åß„ÄÅ
  ÂÖâÁ∑ö„ÅåÈöúÂÆ≥Áâ©„Å´„Çà„Å£„Å¶ÈÅÆ„Çâ„Çå„Çã„Åã„Å©„ÅÜ„Åã„ÇíÊ≠£Á¢∫„Å´Âà§ÂÆö„Åó„Åæ„Åô„ÄÇ
- **ÂΩ±„ÅÆÈÄèÈÅéÁéá„ÅÆËÄÉÊÖÆ**: `LP[h-mpn].shad[k]`„ÅØ„ÄÅ
  ÂêÑÈöúÂÆ≥Áâ©Ë°®Èù¢„ÅÆÊó•ÂΩ±ÁéáÔºàÈÄèÈÅéÁéáÔºâ„ÇíÁ§∫„Åó„ÄÅ
  ÂΩ±„ÅÆÊøÉÊ∑°„ÇíËÄÉÊÖÆ„Åó„Åæ„Åô„ÄÇ
  „Åì„Çå„Å´„Çà„Çä„ÄÅ„Çà„ÇäÁèæÂÆüÁöÑ„Å™ÂΩ¢ÊÖã‰øÇÊï∞„ÇíÁÆóÂá∫„Åß„Åç„Åæ„Åô„ÄÇ

„Åì„ÅÆÈñ¢Êï∞„ÅØ„ÄÅÂª∫Áâ©„ÅÆÊó•Â∞ÑÁí∞Â¢É„ÇíÊ≠£Á¢∫„Å´„É¢„Éá„É´Âåñ„Åó„ÄÅ
Êó•Â∞ÑÁÜ±ÂèñÂæó„ÅÆÊäëÂà∂„ÄÅÂÜ∑ÊàøË≤†Ëç∑„ÅÆËªΩÊ∏õ„ÄÅ
ÊòºÂÖâÂà©Áî®„ÅÆÊúÄÈÅ©Âåñ„ÄÅ„Åä„Çà„Å≥Êó•ÂΩ±Ë®àÁÆó„ÇíË°å„ÅÜ„Åü„ÇÅ„ÅÆÈáçË¶Å„Å™ÂΩπÂâ≤„ÇíÊûú„Åü„Åó„Åæ„Åô„ÄÇ
*/
func FFACTOR_LP(NUM int, LP []*P_MENN, MP []*P_MENN) {

	var l, i int
	var a, va, x, y, z, Px, Py, Pz, U float64
	var S, T float64

	/*---------„É°„É¢„É™„Éº„ÅÆÁ¢∫‰øù-----------------*/
	lpn := len(LP)
	mpn := len(MP)
	mlp := make([]*P_MENN, lpn+mpn) // ÂÖ®„Å¶„ÅÆÈù¢

	// Ë¢´ÂèóÂÖâÈù¢„ÅÆÂΩ¢ÊÖã‰øÇÊï∞„ÇíÊ±Ç„ÇÅ„Çã
	for j := range LP {
		/*-----lpÈù¢„ÅÆ‰∏≠ÂøÉÁÇπ„ÅÆÂ∫ßÊ®ô„ÇíÊ±Ç„ÇÅ„Çã--------*/
		G := GDATA(LP[j])

		/*-------ÂàùÊúüÂåñ---------------*/
		for i := range mlp {
			mlp[i] = new(P_MENN)
			mlp[i].e.X = 0.0
			mlp[i].e.Y = 0.0
			mlp[i].e.Z = 0.0
		}
		//MATINIT(mlp,mlpn) ;

		/*---------lpÈù¢„ÅÆÂ∫ßÊ®ôÂ§âÊèõ---------*/
		for h := range mlp {
			if h < lpn {
				// LP -> MLP
				mlp[h].polyd = LP[h].polyd
				mlp[h].P = make([]XYZ, mlp[h].polyd)
				for i = 0; i < mlp[h].polyd; i++ {
					mlp[h].P[i].X = 0.0
					mlp[h].P[i].Y = 0.0
					mlp[h].P[i].Z = 0.0
				}

				for l = 0; l < mlp[h].polyd; l++ {
					ZAHYOU(LP[h].P[l], G, &mlp[h].P[l], LP[j].wa, LP[j].wb)
				}
			} else {
				// MP -> MLP
				mlp[h].polyd = MP[h-lpn].polyd
				mlp[h].P = make([]XYZ, mlp[h].polyd)
				for i = 0; i < mlp[h].polyd; i++ {
					mlp[h].P[i].X = 0.0
					mlp[h].P[i].Y = 0.0
					mlp[h].P[i].Z = 0.0
				}

				for l = 0; l < mlp[h].polyd; l++ {
					ZAHYOU(MP[h-lpn].P[l], G, &mlp[h].P[l], LP[j].wa, LP[j].wb)
				}
			}
		}

		/*-------mlpÈù¢„ÅÆÊ≥ïÁ∑ö„Éô„ÇØ„Éà„É´„ÇíÊ±Ç„ÇÅ„Çã----------*/
		HOUSEN(mlp)

		/*---------ÁÇπ„ÇíÂ∞ÑÂá∫„Åô„Çã----------------*/
		// NUMÂõûË©¶Ë°å
		sum := 0
		for n := 0; n < NUM; n++ {

			/*----------‰π±Êï∞„ÅÆÁô∫Áîü--------------*/
			RAND(&a, &va)

			// ls: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãXËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÊù±Ë•øÊñπÂêëÔºâ
			// ms: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãYËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÂçóÂåóÊñπÂêëÔºâ
			// ns: 3DÁ©∫Èñì„Å´„Åä„Åë„ÇãZËª∏ÊñπÂêë„ÅÆÊàêÂàÜÔºàÂûÇÁõ¥ÊñπÂêëÔºâ
			ls := math.Sin(va) * math.Cos(a)
			ms := math.Sin(va) * math.Sin(a)
			ns := math.Cos(va)

			s := URA_M(ls, ms, ns, LP[j].wb)
			if s < 0.0 {
				// ÈÄÜÂêë„Åç„ÅÆÂÖâÁ∑ö„ÅØË®àÁÆó„Åó„Å™„ÅÑ
				sum = sum + 1
				continue
			}

			flg := false /*--ÂÜÖÂÅ¥„Éï„É©„Ç∞ÂàùÊúüÂåñ--*/
			for _, _mlp := range mlp {
				// ‰∫§ÁÇπ(Px,Py,Pz)„ÇíÊ±Ç„ÇÅ„Çã
				KOUTEN(x, y, z, ls, ms, ns, &Px, &Py, &Pz, _mlp.P[0], _mlp.e)

				// „Éô„ÇØ„Éà„É´„ÅÆÂêë„ÅçU„ÇíÊ±Ç„ÇÅ„Çã
				PRA(&U, ls, ms, ns, Px, Py, Pz)

				// Â§öËßíÂΩ¢„ÅÆ„É´„Éº„Éó
				rp := _mlp.polyd - 2
				for h := 0; h < rp; h++ {
					INOROUT(Px, Py, Pz, _mlp.P[0], _mlp.P[h+1], _mlp.P[h+2], &S, &T)
					if ((S >= 0.0 && T >= 0.0) && ((S + T) <= 1.0)) && (U > 0.0) {
						// ÂÜÖÂÅ¥„Å´ÂÖ•„Å£„Å¶„ÅÑ„Çã?
						sum = sum + 1
						flg = true
						break
					}
				}
				if flg {
					break
				}
			}
		}

		// ÂΩ¢ÊÖã‰øÇÊï∞
		LP[j].faia = float64(NUM-sum) / float64(NUM)

		//printf("sum=%d NUM=%d LP[%d].faia=%f\n", sum,NUM,j, LP[j].faia);
	}
}
